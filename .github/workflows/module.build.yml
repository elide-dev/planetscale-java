name: "Module: Build"

on:
  ## Manual dispatch
  workflow_dispatch: {}

  ## Sub-workflow call
  workflow_call:
    inputs:
      runner:
        type: string
        required: false
        description: "Runner tag to use"
      graph:
        type: string
        required: false
        default: 'disabled'
        description: "Dependency graph mode"
      provenance:
        type: boolean
        required: false
        description: "Generate provenance"
      signing:
        type: boolean
        required: false
        description: "Sign artifacts"
      jvm:
        type: string
        required: false
        description: "JVM variant to build on"
      java_version:
        type: string
        required: false
        description: "Java version to build with"
    secrets:
      SONAR_TOKEN:
        required: true
        description: "SonarCloud token"
      CODECOV_TOKEN:
        required: true
        description: "Coverage reporting token"
      BUILDLESS_APIKEY:
        required: true
        description: "API key for build caching"

env:
  CI: true
  BUILDLESS_APIKEY: ${{ secrets.BUILDLESS_APIKEY }}

# Read-only permissions by default.
permissions:
  actions: read
  contents: read

# One active build per reference, per workflow.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  ## Stage: Build Library with Gradle
  build:
    name: "Build Library"
    runs-on: ${{ vars.RUNNER || inputs.runner || 'ubuntu-latest' }}
    permissions:
      contents: write
      id-token: write
      checks: write
      pull-requests: read
    outputs:
      hashes: ${{ steps.hash.outputs.hashes }}
    steps:
      - name: "Setup: Harden Runner"
        uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # v2.7.0
        with:
          disable-sudo: true
          egress-policy: audit
      - name: "Setup: Checkout"
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          fetch-depth: 0
      - name: "Setup: JDK ${{ inputs.java_version || vars.JVM_VERSION }}"
        uses: actions/setup-java@387ac29b308b003ca37ba93a6cab5eb57c8f5f93 # v4.0.0
        with:
          java-version: ${{ inputs.java_version || vars.JVM_VERSION }}
          distribution: ${{ inputs.jvm || vars.JVM_VARIANT || 'zulu' }}
      - name: "Setup: Buildless"
        uses: buildless/setup@30e82389418c7f17046606183bc4c78b2c8913e0 # v1.0.2
      - name: "Setup: Cache SonarCloud Packages"
        uses: actions/cache@13aacd865c20de90d75de3b17ebe84f7a17d57d2 # v4.0.0
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: "Setup: Cache Gradle Packages"
        uses: actions/cache@13aacd865c20de90d75de3b17ebe84f7a17d57d2 # v4.0.0
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: "Build: Gradle"
        uses: gradle/gradle-build-action@29c0906b64b8fc82467890bfb7a0a7ef34bda89e # v2
        id: gradlebuild
        env:
          CI: true
          BUILDLESS_APIKEY: ${{ secrets.BUILDLESS_APIKEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          cache-read-only: false
          dependency-graph: ${{ inputs.graph }}
          arguments: |
            build
            test
            check
            preMerge
            --scan
            --warning-mode=none
            --dependency-verification=lenient
            -Pci=true
      - name: "Report: Sonar"
        uses: gradle/gradle-build-action@29c0906b64b8fc82467890bfb7a0a7ef34bda89e # v2
        id: sonar
        continue-on-error: true
        env:
          CI: true
          BUILDLESS_APIKEY: ${{ secrets.BUILDLESS_APIKEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          cache-read-only: true
          arguments: |
            sonar
            --scan
            --warning-mode=none
            --dependency-verification=lenient
            -Pci=true
      - name: "Report: Provenance"
        id: hash
        run: |
          echo "hashes=$(sha256sum ./subprojects/*/build/libs/* | base64 -w0)" >> "$GITHUB_OUTPUT"
      - name: "Report: Tests"
        uses: dorny/test-reporter@a923ed8851f90a1509b334ca82bd1c5c13a02bb2 # v1
        if: success() || failure()
        with:
          name: Library Tests
          path: ./subprojects/*/build/test-results/test/TEST-*.xml
          reporter: java-junit
          max-annotations: "0"
          fail-on-error: false
      - name: "Artifact: Libraries"
        uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4.3.1
        continue-on-error: true
        with:
          name: libraries-jvm
          path: |
            ./subprojects/*/build/libs/*.jar
      - name: "Artifact: Reports"
        uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4.3.1
        continue-on-error: true
        with:
          name: test-reports-jvm
          path: |
            ./build/reports/kover/merged/xml/report.xml
            ./subprojects/*/build/test-results/test/TEST-*.xml
      - name: "Report: Codecov"
        uses: codecov/codecov-action@0cfda1dd0a4ad9efc75517f399d859cd1ea4ced1 # v4.0.2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./build/reports/kover/merged/xml/report.xml

  ## Stage: Report Coverage
  coverage:
    name: "Tests & Coverage"
    needs: ['build']
    runs-on: ${{ vars.RUNNER || inputs.runner || 'ubuntu-latest' }}
    permissions:
      actions: read
      checks: write
      id-token: write
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # v2.7.0
        with:
          egress-policy: audit

      - name: "Setup: Artifacts"
        uses: actions/download-artifact@eaceaf801fd36c7dee90939fad912460b18a1ffe # v4.1.2
        with:
          name: test-reports-jvm

  ## Stage: Build Library with Gradle
  provenance:
    name: "Provenance"
    needs: ['build']
    permissions:
      actions: read
      id-token: write
      contents: write
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v1.9.0
    with:
      base64-subjects: "${{ needs.build.outputs.hashes }}"
      upload-assets: ${{ inputs.provenance }}
